name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build (release)
        run: cargo build --release

      - name: Archive artifacts (Linux)
        if: runner.os == 'Linux'
        run: |
          mkdir -p dist
          cp target/release/dedup-rs dist/dedup-rs-linux-x86_64

      - name: Archive artifacts (macOS)
        if: runner.os == 'macOS'
        run: |
          mkdir -p dist
          cp target/release/dedup-rs dist/dedup-rs-macos-universal

      - name: Archive artifacts (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Copy-Item target/release/dedup-rs.exe dist/dedup-rs-windows-x86_64.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dedup-rs-${{ runner.os }}
          path: dist/*
          if-no-files-found: error
