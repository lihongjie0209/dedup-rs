name: build

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build (release)
        run: cargo build --release

      - name: Archive artifacts (Linux)
        if: runner.os == 'Linux'
        run: |
          mkdir -p dist
          cp target/release/dedup-rs dist/dedup-rs-linux
          zip -j dist/dedup-rs-linux.zip dist/dedup-rs-linux

      - name: Archive artifacts (macOS)
        if: runner.os == 'macOS'
        run: |
          mkdir -p dist
          cp target/release/dedup-rs dist/dedup-rs-macos
          zip -j dist/dedup-rs-macos.zip dist/dedup-rs-macos

      - name: Archive artifacts (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Copy-Item target/release/dedup-rs.exe dist/dedup-rs-windows.exe
          Compress-Archive -Path dist/dedup-rs-windows.exe -DestinationPath dist/dedup-rs-windows.zip -Force

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dedup-rs-${{ runner.os }}
          path: dist/*.zip
          if-no-files-found: error

  release:
    name: Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: dedup-rs-*
          merge-multiple: true
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          files: ./artifacts/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
